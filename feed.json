{"title":"听香水榭","description":"北京邮电大学12级毕业生，掌握Java/Android开发，非专业视觉设计师，非专业产品设计师，桌游智玩爱好者，文艺青年。声色犬马，水月镜花，抚琴煮酒，仗剑天涯。","language":"zh-CN","link":"http://www.tingxiangshuixie.com","pubDate":"Sun, 11 Mar 2018 14:54:00 GMT","lastBuildDate":"Mon, 05 Oct 2020 10:50:26 GMT","generator":"hexo-generator-json-feed","webMaster":"文末","items":[{"title":"带你彻底理解Java中的final关键字","link":"http://www.tingxiangshuixie.com/2018/03/11/java_final/","description":"说来惭愧，我已经很久没有更新博客了。原因大概有二：其一是 主观上 笔者近来有些浮躁，难以静下心了进行总结与反思；其二则是 客观上 近几个月从公司的项目到个人的项目都非常的琐碎繁杂，已经完全透支了笔者的写作热情。 好在最近的历练的确使我有了方方面面的提升，以后会尽可能多地把技术分享带给大家。话不多说，本篇讨论的只有 Java 中的一个关键字——final。","pubDate":"Sun, 11 Mar 2018 14:54:00 GMT","guid":"http://www.tingxiangshuixie.com/2018/03/11/java_final/","category":"往者可鉴"},{"title":"《50 Android Hacks》读书笔记41-50","link":"http://www.tingxiangshuixie.com/2017/10/10/50_android_hacks_5/","description":"Hack41 使用ORMLite构建数据库问题：Android ORMLite框架如何使用？ 解决方案：ORMLite 是一种对象关系映射工具，可用于读写数据库。使用该框架后，应用程序中所有数据库操作都通过ORMLite完成，而不需要手工编写任何SQL语句。该方法可以通过减少创建数据库schema的代码数量来节省时间。 使用ORMLite时最常用的两种注解是 DatabaseTable 和 DatabaseField。这些注解可以分别用于类及其成员变量，并允许生成最终的数据表。指定 generatedId=true 参数，该参数表示该字段是 主键。默认情况下，ORMLite使用类名作为SQL表名，使用成员变量名作为表的列名。","pubDate":"Tue, 10 Oct 2017 10:15:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/10/10/50_android_hacks_5/","category":"往者可鉴"},{"title":"《50 Android Hacks》读书笔记31-40","link":"http://www.tingxiangshuixie.com/2017/10/09/50_android_hacks_4/","description":"Hack31 Android面向切面编程问题：Android如何使用切面编程？ 解决方案：面向切面编程是一种编程范式，通过分离横切关注点提高程序的模块化和组件化。其基本原理是：将横切关注点抽离到一个单独的切面中，同时将需要执行的业务逻辑代码放在单独或者不同模块中。 在Android中可以使用 AspectJ 这个库来实现切面编程。在gradle文件中使用 classpath ‘com.uphyca.gradle:gradle-android-aspectj-plugin:0.9.14’ 构建AspectJ支持。描述切面的代码如下： 123456789101112131415@Aspectpublic class LogAspect &#123; @Pointcut(\"within(com.manning.androidhacks.hack030.MainActivity)\") private void mainActivity() &#123; &#125; @Pointcut(\"execution(* onCreate(..))\") private void onCreate() &#123; &#125; @AfterReturning(pointcut = \"mainActivity() &amp;&amp; onCreate()\") public void logAfterOnCreateOnMainActivity() &#123; Log.d(\"TAG\", \"onCreate() has been called!\"); &#125;&#125;","pubDate":"Mon, 09 Oct 2017 09:09:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/10/09/50_android_hacks_4/","category":"往者可鉴"},{"title":"《50 Android Hacks》读书笔记21-30","link":"http://www.tingxiangshuixie.com/2017/09/29/50_android_hacks_3/","description":"Hack21 与Activity生命周期绑定的Broadcast Receiver问题：在Activity中使用Broadcast Receiver对象监听广播需要注意什么？ 解决方案：在Activity中自定义 Broadcast Receiver，重写 onReceive() 方法，根据接收到的广播执行代码。要注意根据Activity的生命周期决定Broadcast Receiver的生命周期。","pubDate":"Fri, 29 Sep 2017 14:38:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/09/29/50_android_hacks_3/","category":"往者可鉴"},{"title":"《50 Android Hacks》读书笔记11-20","link":"http://www.tingxiangshuixie.com/2017/09/27/50_android_hacks_2/","description":"Hack11 为文本添加发亮的效果问题：如何设计一个显示高亮绿灯的数字时钟？","pubDate":"Wed, 27 Sep 2017 09:35:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/09/27/50_android_hacks_2/","category":"往者可鉴"},{"title":"《50 Android Hacks》读书笔记1-10","link":"http://www.tingxiangshuixie.com/2017/09/22/50_android_hacks_1/","description":"近来发现一本非常好的Android工具书——《50 Android Hacks》，中文译名叫做 《Android开发必知的50个诀窍》。与其他开发类书籍不同的是，该书并不是系统地讲解每一个知识点，而是以 问题/解决方案 的形式提出开发过程中遇到的问题，并编写Demo程序给出合理的解决方案。本书适用于已经学习过Android开发的程序员，且每个项目对应的源代码都可以在Github 50AH-code 中下载。 对于笔者这种对Android开发有一定了解、希望学习到更好的解决方案的程序员来说，这本书非常受用。书中每一节内容对应一个Demo，简单粗暴地印证了 「Talk is cheap. Show me the code.」 这句名言。在此，我将书中值得注意的地方整理出来，以免遗忘。","pubDate":"Fri, 22 Sep 2017 09:34:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/09/22/50_android_hacks_1/","category":"往者可鉴"},{"title":"Civilization and Barbarity","link":"http://www.tingxiangshuixie.com/2017/08/23/civilization_and_barbarity/","description":"16年末的一个静谧的下午，我慵懒地睡了一个午觉后，毫无防备地听到了这首音乐，那一刻仿佛灵魂被什么东西击中。后来看了一些资料，得知此曲背后是一个关于印第安人的故事。 我想起了初中时候读过的阿瑟·柯南道尔一本书——《The Lost World》。也许很多人都以为 《福尔摩斯探案全集》 是柯南道尔的唯一作品，殊不知他的科幻小说同他的推理小说一样精彩。该书讲述了一支探险队到美洲某个高原探险，而这个高原上不仅有古老的 印第安部落，还生存着一些 史前生物（各种恐龙及其他已绝种生物）。","pubDate":"Wed, 23 Aug 2017 17:30:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/08/23/civilization_and_barbarity/","category":"来者可追"},{"title":"Idea and Dream","link":"http://www.tingxiangshuixie.com/2017/03/13/idea_and_dream/","description":"17年春节回家过年，遭遇了人生中一场不大不小的意外，住了半个月院，人也消沉了一个多月。朋友开玩笑说“事业刚起步就摔了个大跟头”，可不是，当真是 摔了个大跟头 ，而且是 爬起来也走不了路 那种。 也许是冥冥中上苍给了我一个放松身心、休养生息的机会，可以放慢脚步、静下心来做一做诸多想做的抑或是未完成的事，可自己却一直也没打起精神。颓唐的时候看了许多影视、文字作品，庆幸无一不是佳作。而后感悟颇多，在这样一个月色很好的凉夜里，写下这篇关于 想法与梦想 的思考。","pubDate":"Mon, 13 Mar 2017 21:11:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/03/13/idea_and_dream/","category":"来者可追"},{"title":"聊一聊适合成年人玩的智力玩具","link":"http://www.tingxiangshuixie.com/2017/01/04/puzzle/","description":"每个男人心中都有一个小男孩，对于玩具的热爱，只是他们对于童年心中遗憾的弥补。 魔方魔方 与 华容道、独立钻石棋 一起被国外智力专家并称为 智力游戏界的三个不可思议。魔方最早是由匈牙利布达佩斯建筑学院厄尔诺·鲁比克教授在1974年发明的，最早的魔方为三阶魔方。 随着魔方风靡全球，越来越多其他类型的魔方被发明出来，如二阶到二十二阶、镜面魔方、SQ1魔方、金字塔魔方、斜转魔方、五魔方、球形魔方、齿轮魔方等等。","pubDate":"Wed, 04 Jan 2017 20:30:00 GMT","guid":"http://www.tingxiangshuixie.com/2017/01/04/puzzle/","category":"思者无惑"},{"title":"Hello World","link":"http://www.tingxiangshuixie.com/2016/12/27/hello_world/","description":"特别遗憾自己在大学的时候没有写博客的觉悟，如果从那个时候就坚持去记录一些东西的话，无论内容如何，积累到如今总归会有一个令人惊讶的数值的。这世上有太多的事逝去后才追悔莫及，所谓 往者不可谏。但是往往愈令人后悔的事，愈给人以深刻的教训，所谓 往者可鉴。 值得庆幸的是 来者犹可追。在大学毕业后在CSDN上写了几篇博客，编辑器排版不好用是一方面，每次修改文章都要经过审核实在是不方便。终于在一些前辈们的刺激下，萌生了注册个人域名搭博客的想法。","pubDate":"Tue, 27 Dec 2016 14:58:00 GMT","guid":"http://www.tingxiangshuixie.com/2016/12/27/hello_world/","category":"来者可追"},{"title":"Android开发之版本更新及自定义通知详解","link":"http://www.tingxiangshuixie.com/2016/12/11/android_download_and_notification/","description":"我现在真的羡慕iOS开发程序员，他们既不用考虑应用升级，更不用处理机型适配这些令人头疼而无意义的问题。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;——题记 本文将从以下几个方面详解Android开发版本更新及自定义通知的那些坑。 Service下载文件要注意的小细节 Android高版本通知图标无法显示（出现白框） 通知图标只能显示中间的一部分，无法显示完整 高版本通知提示无法在状态栏中显示 自定义通知文字颜色适配","pubDate":"Sun, 11 Dec 2016 17:30:00 GMT","guid":"http://www.tingxiangshuixie.com/2016/12/11/android_download_and_notification/","category":"往者可鉴"},{"title":"Android开发之启动页的作用","link":"http://www.tingxiangshuixie.com/2016/11/16/android_startup/","description":"前一篇文章所描述的登录功能逻辑并不复杂，与之相比登出功能更是特别简单，只需要跳转到登录Activity即可。值得注意的是，当用户登出后，需要将登出页的Activity以及之前的诸多Activity 全部清除，避免用户使用 后退 返回到前面打开过的Activity中。 应用程序启动页的设计为什么APP要有启动页？启动页有什么作用？ 启动页并不是为APP提供机会进行艺术展示，而是为了增强用户对应用程序能够快速启动并立即投入使用的感知度。实际上启动页相当于一个进度条的作用，APP需要在这个过程中完成 是否登录的验证、有无新版本待升级的验证 甚至 某些大型资源的加载 等等，待所有工作执行完毕，启动页跳转到下一个页面，给用户一个流畅的交互体验。","pubDate":"Wed, 16 Nov 2016 13:30:00 GMT","guid":"http://www.tingxiangshuixie.com/2016/11/16/android_startup/","category":"往者可鉴"},{"title":"Android开发之登录功能细节记录","link":"http://www.tingxiangshuixie.com/2016/11/14/android_login/","description":"博主作为一名Android开发新人参与的第一个项目，是开发一个直播软件，我负责信息验证、登录以及设置等功能的实现。坦白讲功能逻辑很简单，如果做Demo大概不过一天工夫。但如果要做得很漂亮，给用户一种非常好的使用体验，一些细节还真的需要仔细琢磨。下面我将分享一下在开发登录功能时遇到的一些值得记录的东西。 通常来说登录页面包含两个 EditText，分别对应使用者的账号密码（手机端验证码出现比较少，暂不考虑），不妨先来说说一款优秀的手机应用登录页面应该包含哪些人性化的小组件。","pubDate":"Mon, 14 Nov 2016 12:30:00 GMT","guid":"http://www.tingxiangshuixie.com/2016/11/14/android_login/","category":"往者可鉴"},{"title":"从博弈论的角度理解2013微软编程之美资格赛题目——竞价","link":"http://www.tingxiangshuixie.com/2016/07/21/beauty_of_programming/","description":"这篇文章源自于笔者曾在大学学习运筹学期间的一次演讲，由于老师分配的时间不够等原因，个人当时表现的比较一般，很多同学可能连题目都没搞清楚就结束了。笔者觉得，该题是近几年来微软编程之美中最有趣的一道，无论你是否熟悉数学或编程，都可以看懂这道题目并产生一些自己的想法。 题目时间限制：1000ms 内存限制：256MB 描述 Alice和Bob都要向同一个商人购买钻石。商人手中有 N 颗钻石，他会将它们 一颗颗 地卖给他们，Alice和Bob通过竞价的方式来决定钻石的归属。具体的过程如下：商人首先指定其中一个人开始报价，之后两人轮流报价，要求是一定要比对方报的价格 更高。任何时候，如果一个人不愿出价或者出不起价钱时，可以宣布 弃权，则对手以最后一次报的价格将钻石买下。当然，如果两人都没钱，商人是不会卖钻石的。首次报价至少为 1，并且只能报 整数 的价钱。 Alice和Bob特别爱攀比，因此他们都希望 能比对方买到更多的钻石。Alice和Bob各自带了 CA 和 CB 的钱用于竞拍钻石。此外，Alice和商人有很不错的私人关系，因此商人总是会让 Alice先报价。现在请问，在Alice和Bob都用 最优策略 的情况下，谁能买到更多钻石？ 假设双方都知道对方手中的现金数量，以及商人将要拍卖的钻石数量 N。","pubDate":"Thu, 21 Jul 2016 20:30:00 GMT","guid":"http://www.tingxiangshuixie.com/2016/07/21/beauty_of_programming/","category":"往者可鉴"},{"title":"Git的基本配置","link":"http://www.tingxiangshuixie.com/2016/07/19/git_configuration/","description":"Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或大或小的项目。而由Git衍生出的项目托管平台，包括Github和Gitlab两种。开发者可以将开源项目免费托管在Github的云中，但私有库则需要付费。所以，基于节约开支、方便管理和安全性高等好处，诸多互联网公司选择在自己的服务器上搭建Gitlab来托管代码。 在初次接触到Git时，除了感慨版本控制系统的功能强大之外，遇到了很多配置的问题，现总结如下。","pubDate":"Tue, 19 Jul 2016 20:30:00 GMT","guid":"http://www.tingxiangshuixie.com/2016/07/19/git_configuration/","category":"往者可鉴"}]}